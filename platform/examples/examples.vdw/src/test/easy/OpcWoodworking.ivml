project OpcWoodworking {

    import IIPEcosphere;
    import DataTypes;
    
    import Opc;

    annotate BindingTime bindingTime = BindingTime::compile to .;

    RecordType opcBwIdentification = {
        name = "OpcBwIdentification",
        fields = {
            Field {
                name = "DeviceClass",
                type = refBy(StringType),
                cachingTime = CACHE_ALWAYS
            }, Field {
                name = "Manufacturer",
                type = refBy(opcLocalizedText),
                cachingTime = CACHE_ALWAYS
            }, Field {
                name = "Model",
                type = refBy(opcLocalizedText),
                cachingTime = CACHE_ALWAYS
            }, Field {
                name = "ProductInstanceUri",
                type = refBy(StringType),
                cachingTime = CACHE_ALWAYS
            }, Field {
                name = "SerialNumber",
                type = refBy(StringType),
                cachingTime = CACHE_ALWAYS
            }, Field {
                name = "YearOfConstruction",
                type = refBy(UInt16Type),
                cachingTime = CACHE_ALWAYS
            }
        }
    };
    
    RecordType opcBwState = {
        name = "OpcBwState",
        fields = {
            Field {
                name = "Machine",
                type = refBy(opcBwStateMachine),
                cachingTime = CACHE_ALWAYS
            }
        }
    };

    RecordType opcBwStateMachine = {
        name = "OpcBwStateMachine",
        fields = {
            Field {
                name = "Flags",
                type = refBy(opcBwStateMachineFlags),
                cachingTime = CACHE_ALWAYS
            }, Field {
                name = "Overview",
                type = refBy(opcBwStateMachineOverview),
                cachingTime = CACHE_ALWAYS
            }
        }
    };

    RecordType opcBwStateMachineFlags = {
        name = "OpcBwStateMachineFlags",
        fields = {
            Field {
                name = "Alarm",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "Calibrated",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "Emergency",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "Error",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "MachineInitialized",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "MachineOn",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "PowerPresent",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "RecipeInRun",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }, Field {
                name = "Warning",
                type = refBy(BooleanType),
                cachingTime = CACHE_NONE
            }
        }
    };

    RecordType opcBwStateMachineOverview = {
        name = "OpcBwStateMachineOverview",
        fields = {
            Field {
                name = "CurrentMode",
                type = refBy(WwUnitModeEnumeration),
                cachingTime = CACHE_NONE
            }, Field {
                name = "CurrentState",
                type = refBy(WwUnitStateEnumeration),
                cachingTime = CACHE_NONE
            }
        }
    };

    EnumType WwUnitModeEnumeration = {
        name = "opcWwUnitModeEnumeration",
        literals = {
            EnumLiteral {
                name = "OTHER",
                ordinal = 0
            }, EnumLiteral {
                name = "AUTOMATIC",
                ordinal = 1
            }, EnumLiteral {
                name = "SEMIAUTOMATIC",
                ordinal = 2
            }, EnumLiteral {
                name = "MANUAL",
                ordinal = 3
            }, EnumLiteral {
                name = "SETUP",
                ordinal = 4
            }, EnumLiteral {
                name = "SLEEP",
                ordinal = 5
            }
        }
    };
    
    EnumType WwUnitStateEnumeration = {
        name = "opcWwUnitStateEnumeration",
        literals = {
            EnumLiteral {
                name = "OFFLINE",
                ordinal = 0
            }, EnumLiteral {
                name = "STANDBY",
                ordinal = 1
            }, EnumLiteral {
                name = "READY",
                ordinal = 2
            }, EnumLiteral {
                name = "WORKING",
                ordinal = 3
            }, EnumLiteral {
                name = "ERROR",
                ordinal = 4
            }
        }
    };
    
    freeze {
        .; // every variable declared in this project
    } but (f|f.bindingTime >= BindingTime.compile);

}