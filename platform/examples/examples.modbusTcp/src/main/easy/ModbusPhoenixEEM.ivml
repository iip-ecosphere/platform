project ModbusPhoenixEEM {

    import IIPEcosphere;

    annotate BindingTime bindingTime = BindingTime::compile to .;

    // initial for reading out data
    RecordType modbusPhoenixEEM = {
        name = "ModbusPhoenixEEM",
        fields = modbusPhoenixEEMFields
    };
    
    RecordType modbusPhoenixRwEEM = {
        name = "ModbusPhoenixRwEEM",
        fields = {
            ModbusField {
                offset = 1282,
                name = "Day",
                description = "Day of occurrence of the voltage dip (UTC)",
                type = refBy(Modbus_uint16),
                cachingTime = CACHE_NONE
            }, ModbusField {
                offset = 1283,
                name = "Month",
                description = "Month of occurrence of the voltage dip (UTC)",
                type = refBy(Modbus_uint16),
                cachingTime = CACHE_NONE
            }, ModbusField {
                offset = 1284,
                name = "Year",
                description = "Year of occurrence of the voltage dip (UTC)",
                type = refBy(Modbus_uint16),
                cachingTime = CACHE_NONE
            }
        }
    };

    sequenceOf(Field) modbusPhoenixEEMFields = {
        ModbusField {
            offset = 1282,
            name = "Day",
            description = "Day of occurrence of the voltage dip (UTC)",
            type = refBy(Modbus_uint16),
            cachingTime = CACHE_NONE
        }, ModbusField {
            offset = 1283,
            name = "Month",
            description = "Month of occurrence of the voltage dip (UTC)",
            type = refBy(Modbus_uint16),
            cachingTime = CACHE_NONE
        }, ModbusField {
            offset = 1284,
            name = "Year",
            description = "Year of occurrence of the voltage dip (UTC)",
            type = refBy(Modbus_uint16),
            cachingTime = CACHE_NONE
        }, /*ModbusField {
            offset = 32768,
            name = "U12",
            description = "Effective value voltage U12",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }, ModbusField {
            offset = 32770,
            name = "U23",
            description = "Effective value voltage U23",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }, ModbusField {
            offset = 32772,
            name = "U31",
            description = "Effective value voltage U31",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        },*/ ModbusField {
            offset = 32774,
            name = "U1",
            description = "Effective value voltage U1",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }, /*ModbusField {
            offset = 32776,
            name = "U2",
            description = "Effective value voltage U2",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }, ModbusField {
            offset = 32778,
            name = "U3",
            description = "Effective value voltage U3",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }, */ ModbusField {
            offset = 32780,
            name = "frequency",
            description = "Frequency",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }, ModbusField {
            offset = 32782,
            name = "I1",
            description = "Effective value current I1",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }/*, ModbusField {
            offset = 32784,
            name = "I2",
            description = "Effective value current I2",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }, ModbusField {
            offset = 32786,
            name = "I3",
            description = "Effective value current I3",
            type = refBy(Modbus_float32),
            cachingTime = CACHE_NONE
        }*/
    };

    // ------------ freezing ------------------

    freeze {
        .;
    } but (f|f.bindingTime >= BindingTime.runtimeMon);

}