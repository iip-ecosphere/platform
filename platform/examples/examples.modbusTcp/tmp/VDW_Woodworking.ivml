project VDW {

    import IIPEcosphere;
    import OpcUaDataTypes;
    import OpcWoodworking;

    annotate BindingTime bindingTime = BindingTime::compile to .;

    // ------------ component setup ------------------

    serializer = Serializer::Json;
    // serviceManager, containerManager are already defined    

    aasServer = {
        schema = AasSchema::HTTP,
        port = 9001,
        host = "127.0.0.1"
    };
    aasRegistryServer = {
        schema = AasSchema::HTTP,
        port = 9002,
        host = "127.0.0.1",
        path = "registry"
    };
    aasImplServer = {
        port = 9003
    };
    aasProtocol = AasProtocolVabTcp{};

    // ------------------ transport --------------------------

    transportProtocol = TransportProtocolMQTTv5 {
        port = 8883
    };

    serviceProtocol = ServiceProtocolMQTTv5 {};

    // ------------------ resources/devicemgt ----------------

    deviceRegistry = BasicDeviceRegistry {
    };

    deviceMgtStorage = S3MockDeviceMgtStorage {
        host = "localhost",
        port = 8884,
        region = "local"
    };

    // just for testing, this instantiates app rather than platform
    deviceMgtStorageServer = S3MockDeviceMgtStorageServer{};

    // ------------ data types ------------------

    RecordType opcIn = {
        name = "OpcIn",
        fields = {
        }
    };    
    RecordType opcOut = {
        path = "PLACEHOLDER",
        name = "OpcOut",

        fields = {
            Field {
                name = "opcIWwBaseStateTypeFlags",
                type = refBy(opcIWwBaseStateTypeFlags),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwBaseStateTypeOverview",
                type = refBy(opcIWwBaseStateTypeOverview),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwBaseStateTypeValues",
                type = refBy(opcIWwBaseStateTypeValues),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwStateTypeMachine",
                type = refBy(opcIWwStateTypeMachine),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwStateTypeSubUnits",
                type = refBy(opcIWwStateTypeSubUnits),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwSubUnitsTypeSubUnit",
                type = refBy(opcIWwSubUnitsTypeSubUnit),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwMachineTypeEvents",
                type = refBy(opcWwMachineTypeEvents),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwMachineTypeIdentification",
                type = refBy(opcWwMachineTypeIdentification),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwMachineTypeManufacturerSpecific",
                type = refBy(opcWwMachineTypeManufacturerSpecific),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwMachineTypeState",
                type = refBy(opcWwMachineTypeState),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwBaseEventTypeArguments",
                type = refBy(opcWwBaseEventTypeArguments),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwBaseEventTypeEventCategory",
                type = refBy(opcWwBaseEventTypeEventCategory),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwBaseEventTypeGroup",
                type = refBy(opcWwBaseEventTypeGroup),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwBaseEventTypeLocalizedMessages",
                type = refBy(opcWwBaseEventTypeLocalizedMessages),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwBaseEventTypeMessageId",
                type = refBy(opcWwBaseEventTypeMessageId),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwBaseEventTypeMessageName",
                type = refBy(opcWwBaseEventTypeMessageName),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcWwBaseEventTypePathParts",
                type = refBy(opcWwBaseEventTypePathParts),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwEventMessageTypeArguments",
                type = refBy(opcIWwEventMessageTypeArguments),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwEventMessageTypeEventCategory",
                type = refBy(opcIWwEventMessageTypeEventCategory),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwEventMessageTypeGroup",
                type = refBy(opcIWwEventMessageTypeGroup),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwEventMessageTypeLocalizedMessages",
                type = refBy(opcIWwEventMessageTypeLocalizedMessages),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwEventMessageTypeMessageId",
                type = refBy(opcIWwEventMessageTypeMessageId),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwEventMessageTypeMessageName",
                type = refBy(opcIWwEventMessageTypeMessageName),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwEventMessageTypePathParts",
                type = refBy(opcIWwEventMessageTypePathParts),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeAirPresent",
                type = refBy(opcIWwUnitFlagsTypeAirPresent),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeAlarm",
                type = refBy(opcIWwUnitFlagsTypeAlarm),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeCalibrated",
                type = refBy(opcIWwUnitFlagsTypeCalibrated),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeDustChipSuction",
                type = refBy(opcIWwUnitFlagsTypeDustChipSuction),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeEmergency",
                type = refBy(opcIWwUnitFlagsTypeEmergency),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeEnergySaving",
                type = refBy(opcIWwUnitFlagsTypeEnergySaving),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeError",
                type = refBy(opcIWwUnitFlagsTypeError),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeExternalEmergency",
                type = refBy(opcIWwUnitFlagsTypeExternalEmergency),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeFeedRuns",
                type = refBy(opcIWwUnitFlagsTypeFeedRuns),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeHold",
                type = refBy(opcIWwUnitFlagsTypeHold),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeLoadingEnabled",
                type = refBy(opcIWwUnitFlagsTypeLoadingEnabled),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeMachineInitialized",
                type = refBy(opcIWwUnitFlagsTypeMachineInitialized),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeMachineOn",
                type = refBy(opcIWwUnitFlagsTypeMachineOn),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeMaintenanceRequired",
                type = refBy(opcIWwUnitFlagsTypeMaintenanceRequired),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeManualActivityRequired",
                type = refBy(opcIWwUnitFlagsTypeManualActivityRequired),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeMoving",
                type = refBy(opcIWwUnitFlagsTypeMoving),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypePowerPresent",
                type = refBy(opcIWwUnitFlagsTypePowerPresent),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeRecipeInHold",
                type = refBy(opcIWwUnitFlagsTypeRecipeInHold),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeRecipeInRun",
                type = refBy(opcIWwUnitFlagsTypeRecipeInRun),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeRecipeInSetup",
                type = refBy(opcIWwUnitFlagsTypeRecipeInSetup),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeRemote",
                type = refBy(opcIWwUnitFlagsTypeRemote),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeSafety",
                type = refBy(opcIWwUnitFlagsTypeSafety),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeWaitLoad",
                type = refBy(opcIWwUnitFlagsTypeWaitLoad),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeWaitUnload",
                type = refBy(opcIWwUnitFlagsTypeWaitUnload),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeWarning",
                type = refBy(opcIWwUnitFlagsTypeWarning),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitFlagsTypeWorkpiecePresent",
                type = refBy(opcIWwUnitFlagsTypeWorkpiecePresent),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitOverviewTypeCurrentMode",
                type = refBy(opcIWwUnitOverviewTypeCurrentMode),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitOverviewTypeCurrentState",
                type = refBy(opcIWwUnitOverviewTypeCurrentState),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteErrorTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteErrorTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteLength",
                type = refBy(opcIWwUnitValuesTypeAbsoluteLength),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteMachineOffTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteMachineOffTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteMachineOnTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteMachineOnTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsolutePiecesIn",
                type = refBy(opcIWwUnitValuesTypeAbsolutePiecesIn),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsolutePiecesOut",
                type = refBy(opcIWwUnitValuesTypeAbsolutePiecesOut),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsolutePowerPresentTime",
                type = refBy(opcIWwUnitValuesTypeAbsolutePowerPresentTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteProductionTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteProductionTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteProductionWaitWorkpieceTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteProductionWaitWorkpieceTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteProductionWithoutWorkpieceTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteProductionWithoutWorkpieceTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteReadyTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteReadyTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteRunsAborted",
                type = refBy(opcIWwUnitValuesTypeAbsoluteRunsAborted),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteRunsGood",
                type = refBy(opcIWwUnitValuesTypeAbsoluteRunsGood),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteRunsTotal",
                type = refBy(opcIWwUnitValuesTypeAbsoluteRunsTotal),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteStandbyTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteStandbyTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAbsoluteWorkingTime",
                type = refBy(opcIWwUnitValuesTypeAbsoluteWorkingTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeActualCycle",
                type = refBy(opcIWwUnitValuesTypeActualCycle),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeAxisOverride",
                type = refBy(opcIWwUnitValuesTypeAxisOverride),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeFeedSpeed",
                type = refBy(opcIWwUnitValuesTypeFeedSpeed),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeErrorTime",
                type = refBy(opcIWwUnitValuesTypeRelativeErrorTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeLength",
                type = refBy(opcIWwUnitValuesTypeRelativeLength),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeMachineOnTime",
                type = refBy(opcIWwUnitValuesTypeRelativeMachineOnTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativePiecesIn",
                type = refBy(opcIWwUnitValuesTypeRelativePiecesIn),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativePiecesOut",
                type = refBy(opcIWwUnitValuesTypeRelativePiecesOut),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativePowerPresentTime",
                type = refBy(opcIWwUnitValuesTypeRelativePowerPresentTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeProductionTime",
                type = refBy(opcIWwUnitValuesTypeRelativeProductionTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeProductionWaitWorkpieceTime",
                type = refBy(opcIWwUnitValuesTypeRelativeProductionWaitWorkpieceTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeProductionWithoutWorkpieceTime",
                type = refBy(opcIWwUnitValuesTypeRelativeProductionWithoutWorkpieceTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeReadyTime",
                type = refBy(opcIWwUnitValuesTypeRelativeReadyTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeRunsAborted",
                type = refBy(opcIWwUnitValuesTypeRelativeRunsAborted),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeRunsGood",
                type = refBy(opcIWwUnitValuesTypeRelativeRunsGood),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeRunsTotal",
                type = refBy(opcIWwUnitValuesTypeRelativeRunsTotal),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeStandbyTime",
                type = refBy(opcIWwUnitValuesTypeRelativeStandbyTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeRelativeWorkingTime",
                type = refBy(opcIWwUnitValuesTypeRelativeWorkingTime),
                cachingTime = CACHE_ALWAYS
            },            Field {
                name = "opcIWwUnitValuesTypeSpindleOverride",
                type = refBy(opcIWwUnitValuesTypeSpindleOverride),
                cachingTime = CACHE_ALWAYS
            }        
}
    };

    // ------------ individual, reusable services ------------------

    OpcUaV1Connector myOpcUaConn = {
        id = "myOpcConn",
        name = "myOpcConn example",
        description = "",
        ver = "0.1.0",
        host = "opcua.umati.app",
        port = 4840, // default localhost
        
        input = {{type=refBy(opcIn)}},
        output = {{type=refBy(opcOut)}},
        inInterface = refBy(opcIn), 
        outInterface = refBy(opcOut)
        /*operations = {
          FieldAssignmentOperation{field=myConnPltfIn.fields[1], 
            operation=AddDataTranslationOperation{
                arguments={
                    DataFieldAccess{field=myConnMachineOut.fields[0]},
                    IntegerConstantDataOperation{value=100}}
            }
          }
        }*/
    };

    // not really needed except for populating the interfaces package
    Service myReceiverService = JavaService {
        id = "OpcReceiver",
        name = "OPC Receiver",
        description = "",
        ver = "0.1.0",
        deployable = true,
        class = "ReceiverImpl",
        artifact = "",
        kind = ServiceKind::SINK_SERVICE,
        input = {{type=refBy(opcOut)}}
    };

    // --------------------- monitoring ---------------------------

    // current default: no monitoring configured

    // ------------------------- UI -------------------------------

    // current default: no UI configured

    // ------------ application and service nets ------------------

    Application myApp = {
        id = "VdwOpcApp",
        name = "Simple VDW OPC Demo App",
        ver = "0.1.0",
        description = "",
        services = {refBy(myMesh)}        
    };

    ServiceMesh myMesh = {
        description = "VDW Service Net",
        sources = {refBy(mqttOpcSource)}
    };

    MeshSource mqttOpcSource = {
       impl = refBy(myOpcUaConn),
       next = {refBy(myConnMySourceMyReceiver)}
    };

    // needed to form a graph

    MeshConnector myConnMySourceMyReceiver = {
        name = "Source->Receiver",
        next = refBy(myReceiver)
    };

    MeshSink myReceiver = {
        impl = refBy(myReceiverService)
    };

    // ---------- generation setup ------------

    sharedInterfaces = true;
    sharedArtifact = "de.iip-ecosphere.platform:apps.VdwOpcAppInterfaces:" + iipVer;

    // ------------ freezing ------------------

    freeze {
        aas;
        aasServer;
        aasRegistryServer;
        aasImplServer;
        aasPersistency;
        aasProtocol;
        serializer;
        transportProtocol;
        serviceManager;
        serviceProtocol;
        containerManager;
        deviceMgtStorageServer;
        deviceMgtStorage;
        deviceRegistry;
        javaModuleOpts;
        javaOpts;
        pidDir;
        sharedInterfaces;
        sharedArtifact;
        platformMonitoring;
        managementUi;
        artifactsFolder;
        artifactsUriPrefix;
        OpcWoodworking; // now freeze also cachingTime
        .; // every variable declared in this project
    } but (f|f.bindingTime >= BindingTime.runtimeMon);

}