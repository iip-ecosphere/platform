project AllTypesPartPython {

    import IIPEcosphere; 
    
    annotate BindingTime bindingTime = BindingTime::compile to .;

    RecordType PythonCondaTestInput = {
        name = "PythonCondaTestInput",
        fields = {
            Field {
                name = "id",
                type = refBy(IntegerType)
            }, Field {
                name = "value1",
                type = refBy(DoubleType)
            }, Field {
                name = "value2",
                type = refBy(DoubleType)
            }
        }
    };

    RecordType PythonVenvTestInput = {
        name = "PythonVenvTestInput",
        fields = {
            Field {
                name = "id",
                type = refBy(IntegerType)
            }, Field {
                name = "value1",
                type = refBy(DoubleType)
            }, Field {
                name = "value2",
                type = refBy(DoubleType)
            }, Field {
                name = "confidence",
                type = refBy(DoubleType)
            }, Field {
                name = "prediction",
                type = refBy(BooleanType)
            }, Field {
                name = "env1",
                type = refBy(StringType)
            }
        }
    };
    
    RecordType PythonVenvTestOutput = {
        name = "PythonVenvTestOutput",
        fields = {
            Field {
                name = "id",
                type = refBy(IntegerType)
            }, Field {
                name = "value1",
                type = refBy(DoubleType)
            }, Field {
                name = "value2",
                type = refBy(DoubleType)
            }, Field {
                name = "confidence",
                type = refBy(DoubleType)
            }, Field {
                name = "prediction",
                type = refBy(BooleanType)
            }, Field {
                name = "env1",
                type = refBy(StringType)
            }, Field {
                name = "env2",
                type = refBy(StringType)
            }
        }
    };   

    freeze {
        .;
    }
}