project AllServices {

    import AllTypes; 
    
    annotate BindingTime bindingTime = BindingTime::compile to .;

    Service myPythonSyncSourceService = JavaService {
        id = "SimplePythonSyncSource",
        name = "Simple Python Sync Data Source",
        description = "",
        ver = "0.1.0",
        deployable = true,
        asynchronous = false,
        class = "de.iip_ecosphere.platform.examples.python.SimplePythonSyncSourceImpl",
        artifact = "de.iip-ecosphere.platform:examples.pythonSync:" + iipVer,
        kind = ServiceKind::SOURCE_SERVICE,
        output = {{type=refBy(PythonSyncTestInput)}}
    };
    
    Service myPythonSyncService = PythonService {
        id = "ExamplePythonSyncService",
        name = "Example Python Sync Service",
        description = "",
        ver = "0.1.0",
        deployable = true,
        asynchronous = false,
        input = {{type=refBy(PythonSyncTestInput)}},
        output = {{type=refBy(PythonSyncTestOutput)}},
        artifact = "de.iip-ecosphere.platform:examples.pythonSync:" + iipVer,
        kind = ServiceKind::TRANSFORMATION_SERVICE,
        dependencies = {refBy(PYTHON313)}
    };
    
    Service myPythonSyncReceiverService = JavaService {
        id = "SimplePythonSyncReceiver",
        name = "Simple Python Sync Data Receiver",
        description = "",
        ver = "0.1.0",
        deployable = true,
        asynchronous = false,
        class = "de.iip_ecosphere.platform.examples.python.SimplePythonSyncReceiverImpl",
        artifact = "de.iip-ecosphere.platform:examples.pythonSync:" + iipVer,
        kind = ServiceKind::SINK_SERVICE,
        input = {{type=refBy(PythonSyncTestOutput)}}
    };
    
    freeze {
        .;
    }
}