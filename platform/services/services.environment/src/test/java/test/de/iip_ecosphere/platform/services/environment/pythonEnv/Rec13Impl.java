package test.de.iip_ecosphere.platform.services.environment.pythonEnv;

/**
 * Implementation of the application data type Rec13.
 * Generated by: EASy-Producer.
 */
public class Rec13Impl implements Rec13 {
 
    private int intField;
    private String stringField;
    

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public Rec13Impl() {
    }
    
    /**
     * Copy constructor.
     * 
     * @param from the instance to copy the values from
     */
    public Rec13Impl(Rec13 from) {
        this.intField = from.getIntField();
        this.stringField = from.getStringField();
    }

    @Override
    public int getIntField() {
        return intField;
    }
    
    @Override
    public String getStringField() {
        return stringField;
    }
    
    
    @Override
    public void setIntField(int value) {
        this.intField = value;
    }
    
    @Override
    public void setStringField(String value) {
        this.stringField = value;
    }
    
    // for testing
    
    /**
     * Applies equals with <b>null</b>.
     * 
     * @param o1 the first object
     * @param o2 the second object
     * @return {@code true} if equals or both are <b>null</b>, {@code false} else
     */
    public static boolean equals(Object o1, Object o2) {
        return (o1 == o2) || (o1 != null && o1.equals(o2));
    }
    
    @Override
    public boolean equals(Object obj) {
        boolean eq = false;
        if (obj instanceof Rec13Impl) {
            Rec13Impl r = (Rec13Impl) obj;
            eq = r.getIntField() == getIntField() && equals(r.getStringField(), getStringField()); 
        }
        return eq;
    }
    
    @Override
    public int hashCode() {
        return Integer.hashCode(getIntField()) + (null == getStringField() ? 0 : getStringField().hashCode());
    }
    
    @Override
    public String toString() {
        return "<" + getIntField() + ", " + getStringField() + ">";
    }

}
