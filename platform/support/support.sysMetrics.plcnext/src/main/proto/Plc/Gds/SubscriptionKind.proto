///////////////////////////////////////////////////////////////////////////////
//
//  Copyright PHOENIX CONTACT Electronics GmbH
//
///////////////////////////////////////////////////////////////////////////////
syntax = "proto3";




// DO NOT MODIFY THIS FILE, THIS FILE IS AUTOGENERATED

/*NAMESPACE_BEGIN*/

package Arp.Plc.Gds.Services.Grpc;

/// <summary>
/// This enumeration contains the possible kinds of subscriptions.
/// </summary>
/// <remarks>
/// <para>
/// One of the main difference between these kinds are the internal used buffer and
/// the way how they are triggered.
/// </para>
/// <para>
/// These enumerated kinds are equivalent to the kinds from <c>Arp::Meta:Subscriptionkind</c>.
/// </para>
/// </remarks>
enum SubscriptionKind
{
    /// <summary></summary>
    SK_None            = 0;

    /// <summary>
    /// The subscription operates with a task-triggered <c>DoubleBuffer</c>, which holds the last written port data.
    /// </summary>
    SK_HighPerformance = 1;

    /// <summary>
    /// The subscription operates with a task-triggered <c>QuadBuffer</c>, which holds the last written port data.
    /// </summary>
    SK_RealTime        = 2;

    /// <summary>
    /// The subscription operates with a task-triggered <c>RingBuffer</c>, which holds the last <c>N</c> numbers of written data.
    /// <c>N</c> is a configurable parameter which define the capacity of the ring.
    /// </summary>
    SK_Recording       = 3;

    /// <summary>
    /// The subscription operates with a task-triggered <c>RingBuffer</c>, which holds the last <c>N</c> numbers of written data.
    /// <c>N</c> is a configurable parameter which define the capacity of the ring.
    /// </summary>
    SK_ClosedRealTime  = 4;

    /// <summary>
    /// The subscription operates with a self-triggered <c>DoubleBuffer</c>, which holds the last written port data.
    /// </summary>
    SK_DirectRead      = 5;
}
