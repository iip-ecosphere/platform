<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>kiServices.rapidminer.rtsa</artifactId>
  <packaging>jar</packaging>
  <name>BasicMaven</name>
  <description>Integration of the RapidMiner Real-Time Intelligent Scoring Agent.</description>

  <parent>
     <groupId>de.iip-ecosphere.platform</groupId>
     <artifactId>platformDependencies</artifactId>
     <version>0.4.0</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>de.iip-ecosphere.platform</groupId>
      <artifactId>support.aas</artifactId>
      <version>${project.version}</version>
    </dependency>     
    <dependency>
      <groupId>de.iip-ecosphere.platform</groupId>
      <artifactId>services.environment</artifactId>
      <version>${project.version}</version>
    </dependency>    
  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.iip-ecosphere.platform</groupId>
      <artifactId>transport</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <!-- A bit JSON for testing serialization/deserialization -->
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
		<groupId>com.sparkjava</groupId>
		<artifactId>spark-core</artifactId>
		<version>2.9.3</version>
		<scope>test</scope>
	</dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.2.0</version>
          <executions>
              <execution>
                  <id>copy-dependencies</id>
                  <goals>
                      <goal>copy-dependencies</goal>
                  </goals>
                  <phase>package</phase>
                  <configuration>
                      <prependGroupId>true</prependGroupId>
                      <outputDirectory>${project.build.directory}/fake/rtsa/lib</outputDirectory>
                      <overWriteReleases>false</overWriteReleases>
                      <overWriteSnapshots>true</overWriteSnapshots>
                      <overWriteIfNewer>true</overWriteIfNewer>
                      <!-- sync exclusions with build-classpath -->
                  </configuration>
              </execution>
              <execution>
                <id>build-classpath</id>
                <phase>compile</phase>
                <goals>
                  <goal>build-classpath</goal>
                </goals>
                <configuration>
                    <outputFile>${project.build.directory}/test-classes/classpath</outputFile>
                    <prependGroupId>false</prependGroupId>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <includeScope>test</includeScope>
                    <!-- sync exclusions with copy-dependencies -->
                </configuration>
              </execution>
          </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
	  	<artifactId>maven-antrun-plugin</artifactId>
	    <version>1.8</version>
	    <executions>
	        <execution>
	            <phase>process-test-resources</phase>
	            <configuration>
	                <target>
                        <mkdir dir="${project.build.directory}/fake"/>
	                    
                        <mkdir dir="${project.build.directory}/fake/rtsa"/>
	                    <mkdir dir="${project.build.directory}/fake/rtsa/bin"/>
                        <mkdir dir="${project.build.directory}/fake/rtsa/home"/>
                        <mkdir dir="${project.build.directory}/fake/rtsa/deployments"/>
                        <mkdir dir="${project.build.directory}/fake/rtsa/lib"/>
                        <jar basedir="${project.build.directory}/test-classes" destfile="${project.build.directory}/fake/rtsa/lib/fakeRtsa.jar" includes="test/de/iip_ecosphere/platform/kiServices/rapidminer/rtsa/Fake*.class, simplelogger.properties">
                        </jar>
                        <zip basedir="${project.build.directory}/fake/rtsa" destfile="${project.build.directory}/fake/RTSA-0.14.5.zip"/>

                        <mkdir dir="${project.build.directory}/fake/empty"/>
                        
                        <mkdir dir="${project.build.directory}/fake/deployment"/>
                        <mkdir dir="${project.build.directory}/fake/deployment/home"/>
                        <mkdir dir="${project.build.directory}/fake/deployment/home/deployments"/>
                        <jar basedir="${project.build.directory}/fake/empty" destfile="${project.build.directory}/fake/deployment/home/deployments/fakeDeployment.jar">
                        </jar>
                        <zip basedir="${project.build.directory}/fake/deployment" destfile="${project.build.directory}/fake/myRtsaexample-0.1.0.zip"/>
                            
                        <!-- for testing -->
                        <mkdir dir="${project.build.directory}/fake/deployments"/>
                        <copy file="${project.build.directory}/fake/myRtsaexample-0.1.0.zip" todir="${project.build.directory}/fake/deployments"/>
	                </target>
	            </configuration>
	            <goals>
	                <goal>run</goal>
	            </goals>
	        </execution>
	    </executions>      
      </plugin>
    </plugins>
    <pluginManagement>
        <plugins>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
                <groupId>org.eclipse.m2e</groupId>
                <artifactId>lifecycle-mapping</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <lifecycleMappingMetadata>
                        <pluginExecutions>
                            <pluginExecution>
                                <pluginExecutionFilter>
                                    <groupId>
                                        org.apache.maven.plugins
                                    </groupId>
                                    <artifactId>
                                        maven-dependency-plugin
                                    </artifactId>
                                    <versionRange>
                                        [3.1.2,)
                                    </versionRange>
                                    <goals>
                                        <goal>build-classpath</goal>
                                    </goals>
                                </pluginExecutionFilter>
                                <action>
                                    <ignore/>
                                </action>
                            </pluginExecution>
                            <pluginExecution>
                                <pluginExecutionFilter>
                                    <groupId>
                                        org.apache.maven.plugins
                                    </groupId>
                                    <artifactId>
                                        maven-antrun-plugin
                                    </artifactId>
                                    <versionRange>
                                        [1.8,)
                                    </versionRange>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                </pluginExecutionFilter>
                                <action>
                                    <ignore/>
                                </action>
                            </pluginExecution>
                        </pluginExecutions>
                    </lifecycleMappingMetadata>
                </configuration>
            </plugin>
        </plugins>
    </pluginManagement>
  </build>

</project>