project AllServicesPartSimpleMesh {

    import AllTypes; 
    
    annotate BindingTime bindingTime = BindingTime::compile to .;
   
    Service mySourceService = JavaService {
        id = "SimpleSource",
        name = "Simple Data Source",
        description = "",
        ver = "0.1.0",
        deployable = true,
        asynchronous = true,
        class = "de.iip_ecosphere.platform.test.apps.serviceImpl.SimpleSourceImpl",
        artifact = "de.iip-ecosphere.platform:apps.ServiceImpl:" + iipVer,
        kind = ServiceKind::SOURCE_SERVICE,
        output = {{type=refBy(rec1)}},
        input = {{type=refBy(feedback), forward=false}}, 
        parameter = { // for UI testing only
          StringParameter {
            name="camIP", 
            defaultValue="127.0.0.1",
            systemProperty="iip.app.simpleMesh.camIP"
          },IntegerParameter {
            name="camPort", 
            defaultValue=-1,
            systemProperty="iip.app.simpleMesh.camPort"
          }
        },
        plugins = {refBy(BaSyx10Plugin)} // just for testing, would be specified individually at (AAS) connector
    };
    
    Service myReceiverService = JavaService {
        id = "SimpleReceiver",
        name = "Simple Data Receiver",
        description = "",
        ver = "0.1.0",
        deployable = true,
        class = "de.iip_ecosphere.platform.test.apps.serviceImpl.SimpleReceiverImpl",
        artifact = "de.iip-ecosphere.platform:apps.ServiceImpl:" + iipVer,
        kind = ServiceKind::SINK_SERVICE,
        input = {{type=refBy(rec1)}},
        output = {{type=refBy(feedback), forward=false}}
    };

    // just the type for mgtUI testing    
    Server myServer = JavaServer {
      id = "myServer",
      description = "Unneeded server",
      ver = "0.0.1",
      host = "localhost",
      port = 9989,
      class = "java.lang.Object", // placeholder, will not work -> Server interface
      cmdArg = "--port=${port}"
    };
   
    freeze {
        .;
    }
}