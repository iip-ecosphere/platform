@advice(IIPEcosphere)
template JavaBasics(Configuration config, FileArtifact target) {

    def String asIdentifier(String s) {
        s;
    }

    def String asMethodNameSuffix(String s) {
        s.firstToUpperCase().toIdentifier();
    }
    
    def String asTypeName(String s) {
        if (s.indexOf("[") > 0) {
            s; // assume type name with array
        } else if (s.indexOf(".") > 0) {
            s; // assume FQN
        } else {
            s.firstToUpperCase().toCamelCaseIdentifier();
        }
    }
    
    def String test(String s) {
        s;
    }
    
    // ------------------------------------------ type name access -------------------------------------

    def String toTypeName(IOType type) {
        toTypeName(type.type);
    }
    
    def String toTypeName(DataType type) {
        asTypeName(type.name);
    }
    
    def String toTypeName(PrimitiveType type) {
        switch(type.name) {
            "Integer" : "int",
            "Long" : "long",
            "String" : "String",
            "Boolean" : "boolean",
            "Float" : "float",
            "Double" : "double"
        }
    }
    
    // ------------------------------------------ primitive type casting -------------------------------------
    
        // preliminary... JavaBasics + ??
    def cast(DataType type) {
        ""
    }
    
    def cast(PrimitiveType type) {
        switch(type.name) {
            "Integer" : "(int)",
            "Long" : "(long)",
            "String" : "(String)",
            "Boolean" : "(boolean)",
            "Float" : "(float)",
            "Double" : "(double)"
        }
    }    
    
    // ------------------------------------------ (MVN) artifact access -------------------------------------
    
    def String getArtifact(MeshElement elt) {
        getArtifact(elt.impl);
    }
    
    def String getArtifact(ServiceBase service) {
        "";
    }

    def String getArtifact(CompleteService service) {
        service.artifact;
    }

    def String getArtifact(JavaService service) {
        service.artifact;
    }

    def String getArtifact(Connector conn) {
        conn.artifact;
    }
    
    // ------------------------------------------ other -------------------------------------

    def String toPath(String pkg) {
        pkg.replace(".", "/");
    }
    
    def String toJvmMemLimitOpt(Integer limit) {
        if (limit > 0) {
            "-Xmx${limit}M"
        } else {
            ""
        }
    }

}
