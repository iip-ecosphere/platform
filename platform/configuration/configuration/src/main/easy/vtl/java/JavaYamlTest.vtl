import JavaBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
@format(profile="java", profileArg_javadocIndent="* ", lineLength = 120)
template JavaYamlTest(Configuration config, FileArtifact target, String pkg, String fqnCls, String cfgFile, String clsName="AllTests") {

    def main(Configuration config, FileArtifact target, String pkg, String fqnCls, String cfgFile, String clsName="AllTests") {
        JavaCodeArtifact art = target;
        art.setPackage(pkg);
        
        JavaCodeClass mainCls = art.addClass(clsName,
            'Tests a Yaml configuration file. Must be done during build as then all dependencies are determined and available.
            Generated by: EASy-Producer.');
        JavaCodeMethod meth = mainCls.addMethod("void", "testCfg", "Tests reading a Yaml configuration file.");
        meth.addAnnotation("org.junit.Test");
        meth.addException("java.io.IOException", "shall not occur if test is successful");
        JavaCodeTryBlock try = meth.addTry(); // incomplete
        try.addResource("java.io.FileInputStream", "fis", "")
            .addNew("java.io.FileInputStream")
                .addNew("java.io.File")
                    .addStringArgument(cfgFile);
        try.addCall("de.iip_ecosphere.platform.support.setup.AbstractSetup.readFromYaml", JavaCodeImportScope.METHOD)
            .addArgument("${fqnCls}.class")
            .addArgument("fis");
        try.addCatch("java.io.IOException", "e")
           .addSLComment("close file and re-throw")
           .addThrow("e");
    }

}
