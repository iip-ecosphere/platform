import Basics;
import JavaBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
@format(profile="java", profileArg_javadocIndent=" * ", lineLength = 120)
template JavaEnum(Configuration config, JavaCodeArtifact target, EnumType type, String pkg) {

    def main(Configuration config, JavaCodeArtifact target, EnumType type, String pkg) {
        String clsName = asTypeName(type.name);
        target.setPackage(pkg);

        JavaCodeEnum enm = target.addEnum(clsName,
            'Enumeration ${clsName}.
            Generated by: EASy-Producer.')
            .addInterface("de.iip_ecosphere.platform.transport.serialization.IipEnum");
        for (EnumLiteral l: type.literals) {
            enm.addLiteral(asMethodFieldIdentifier(l.name), 'Defines the literal ${l.name}.${prependIfNotEmpty(" ", l.description)}')
              .addArgument(l.ordinal);
        }
        JavaCodeAttribute attr = enm.addAttribute("int", "modelOrdinal");
        JavaCodeMethod cons = enm.addConstructor("Creates a literal constant.");
        cons.addParameter("int", "modelOrdinal", "the ordinal value from the model");
        cons.addAssignment("this.modelOrdinal", "modelOrdinal");
        enm.addGetter(attr)
            .addOverrideAnnotation();
    }
    
}
