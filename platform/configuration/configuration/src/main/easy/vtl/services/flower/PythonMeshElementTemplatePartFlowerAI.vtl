import PythonBasics;
import MeshBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template PythonMeshElementTemplatePartFlowerAI(Configuration config, FileArtifact target, MeshElement elt, String pkg) {

    def generateAsyncProcessorInMethodImpl(FlowerFederatedAiService service) {
        '#self.IP = Service.getNetMgtKeyAddress()
        client = Client()
        fl.client.start_numpy_client(server_address=self.IP ,client=client)'
    } 
    
    def generateSyncProcessorMethodImpl(FlowerFederatedAiService service) {
        '#self.IP = Service.getNetMgtKeyAddress()
         client = Client()
        fl.client.start_numpy_client(server_address=self.IP ,client=client)'
    } 
    
    def generateImports(FlowerFederatedAiService service) {
        'from Service import Service
        from services.flowers.Client import Client
        import flwr as fl
        '  
    }
    
    def inheritsFrom(String cls) {
        cls; // may add flower stuff here
    }

    def generateFurtherMethods(FlowerFederatedAiService service) {
        '${generateReceiveClientServer(service.server)|e}'
    } 

}
