import Basics;
import JavaBasics;
import MavenBasics;
import JavaMapping;
import MeshBasics;
import SpringCloudStreamDeploymentDescriptorBase;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template SpringCloudStreamDeploymentDescriptorPartFlowerAI(Configuration config, FileArtifact target, Application app, sequenceOf(MeshElement) elements) {

    def generateServer(FlowerFederatedAiServer server) {
        String clsName = asTypeName(server.id);
        String id = toFolderName(server.id);
        'artifacts:
          - /python_${id}.zip
        cmdArg:
          - --mode
          - console
          - --modulesPath
          - \\${tmp}/flowerAi_${id}
          - --servicesPackage
          - ${pythonServicesPackageName(server)}
          - --sid
          - ${server.id}
        homePath: \\${tmp}/flowerAi_${id}
        executablePath: \\${tmp}/flowerAi_${id}'
    }
    
    def generateService(FlowerFederatedAiService service) {
        if (isDefined(service.server)) {
            'netMgtKey: ${service.server.id}
            transportChannel: ${getStringValueSafe(service.server.transportChannel, "")}'
        } else {
            ''
        }
    }
    
}
