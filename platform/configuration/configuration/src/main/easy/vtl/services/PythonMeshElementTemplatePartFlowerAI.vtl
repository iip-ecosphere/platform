import PythonBasics;
import MeshBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template PythonMeshElementTemplatePartFlowerAI(Configuration config, FileArtifact target, MeshElement elt, String pkg) {

    /*
    def generateSourceMethodImpl(FlowerFederatedAiService service) {
        '#TODO add your code here'
    }
    
    def generateAsyncProcessorInMethodImpl(FlowerFederatedAiService service) {
        '#create result instance and call self.ingest(data)
        raise NotImplementedError'
    } 
    
    def generateSyncProcessorMethodImpl(FlowerFederatedAiService service) {
        '#TODO add your code here'
    } 
    
    def generateSinkMethodImpl(FlowerFederatedAiService service) {
        'raise NotImplementedError'
    }
    
    def generateImports(FlowerFederatedAiService service) {
        '' // may add flower, framework imports here
    }
    
    def inheritsFrom(String cls) {
        cls; // may add flower stuff here
    }
    */

    def generateFurtherMethods(FlowerFederatedAiService service) {
        '${generateReceiveClientServer(service.server)|e}'
    } 

}
