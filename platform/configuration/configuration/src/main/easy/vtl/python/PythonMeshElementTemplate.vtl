import PythonBasics;
import MeshBasics;
import PythonMeshElementTemplateBase;
insert PythonMeshElementTemplatePart*;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template PythonMeshElementTemplate(Configuration config, FileArtifact target, MeshElement elt, String pkg, PythonService service) extends PythonMeshElementTemplateBase {

    def main(Configuration config, FileArtifact target, MeshElement elt, String pkg, PythonService service) {
        IIPEcosphere cfg = config;
        initTypeAdd(cfg);
        String clsName = asTypeName(service.name);
        String ifName = "${clsName}Interface";
        'import iip.Registry
        from Version import Version
        from Service import ServiceState
        from Service import ServiceKind
        ${produceDatatypeImports(elt, service)}
        from interfaces.${clsName}Interface import ${clsName}Interface

        class ${clsName}(${inheritsFrom(ifName)}):
            """Template service implementation for ${clsName}
               Generated by: EASy-Producer."""
            
            def __init__(self):
                """Initializes the service.""" 
                super().__init__()
            
            ${produceReconfigure(service)}
            ${generateDataMethods(elt, true)}
            ${generateFurtherMethods(service)}

        #registers itself
        ${clsName}()'
    }
    
}
