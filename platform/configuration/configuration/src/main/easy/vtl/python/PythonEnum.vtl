import Basics;
import PythonBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template PythonEnum(Configuration config, FileArtifact target, EnumType type) {

    // generates code for the individual literals
    def literals(EnumType type) {
        for (EnumLiteral l: type.literals) {
            '${asIdentifier(l.name)} = ${l.ordinal}
            """Defines the literal ${l.name}.${prependIfNotEmpty(" ", l.description)}"""\n'
        }
    }

    def main(Configuration config, FileArtifact target, EnumType type) {
        String clsName = asTypeName(type.name);
        'from enum import Enum

        class ${clsName}(Enum):
            """Defines the enum ${clsName}.
               Generated by: EASy-Producer."""
         
            ${literals(type)|e}

            def valueByModelOrdinal(modelOrdinal : int) -> ${clsName}:
                """Returns an enum literal via its model ordinal.
                
                   Parameter:
                     - modelOrdinal: the desired ordinal value
                   Returns:
                     - the enum literal or null"""

                for l in ${clsName}:
                    if l.value == modelOrdinal:
                        return l
                return null'
    }
    
}
