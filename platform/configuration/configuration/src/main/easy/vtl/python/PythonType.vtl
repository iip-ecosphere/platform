import Basics;
import PythonBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template PythonType(Configuration config, FileArtifact target, RecordType type, Boolean interface, Boolean sharedInterfaces) {

    // generates code for the individual attributes
    def attributes(RecordType type) {
        if (not(interface)) {
            for (Field f: type.fields) {
                '${asIdentifier(f.name)}: ${toTypeName(f.type)}'
            }
        }
    }
    
    // generates code for the getters
    def getters(RecordType type) {
        for (Field f: type.fields) {
            'def get${asMethodNameSuffix(f.name)}(self) -> ${toTypeName(f.type)}:
                """Returns the value of {@code ${asIdentifier(f.name)}}.${prependIfNotEmpty(" ", f.description)}
                
                   Returns:
                     - the value of ${f.name}"""'
            if (interface) {
            '    raise NotImplementedError'
            } else {
            '    return self.${asIdentifier(f.name)}'
            }
            ''
        }
    }

    // generates code for the setters
    def setters(RecordType type) {
        for (Field f: type.fields) {
            'def set${asMethodNameSuffix(f.name)}(self, v):
                """Changes the value of {@code ${asIdentifier(f.name)}}.${prependIfNotEmpty(" ", f.description)}
                
                   Parameters:
                     - v -- the new value of ${f.name}, may be of type ${toTypeName(f.type)} or the corresponding numpy type"""'
            if (interface) {
            '    raise NotImplementedError'
            } else {
            '    if ("numpy" in str(type(v))):'
            '        self.${asIdentifier(f.name)} = v.item()'
            '    else:'
            '        self.${asIdentifier(f.name)} = v'
            }
            ''
        }
    }

    def main(Configuration config, FileArtifact target, RecordType type, Boolean interface, Boolean sharedInterfaces) {
        String clsName = asTypeName(type.name);
        String add = "";
        String comment;
        String ext = "";
        String imp = "";
        if (sharedInterfaces) {
            if (interface) {
                comment = "Interface";
            } else {
                add = "Impl";
                comment = "Implementation";
                ext = "(${clsName})";
                imp = "from datatypes.${clsName} import ${clsName}\n";                
            }
        } else {
            comment = "Implementation";
            interface = false;
        }
        '${imp|e}
        from datetime import datetime
        
        class ${clsName}${add}${ext}:
            """${comment} of the application data type ${clsName}. 
               Generated by: EASy-Producer."""
         
            ${attributes(type)|e}
            
            ${getters(type)}
            
            ${setters(type)}'
    }
    
}
