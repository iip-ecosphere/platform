import Basics;
import JavaBasics;
import DockerBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template DockerfilePlatform(IIPEcosphere config, FileArtifact target) {
	
    def main(IIPEcosphere config, FileArtifact target) {

        'FROM python:3.9-slim-buster'
        //'${containerSettings(config, containerType, device)}'
        'RUN apt-get update && apt-get install -y openjdk-11-jre && apt-get install -y npm'
        //'RUN apt-get install -y openjdk-11-jre'

        'COPY requirements.txt requirements.txt'
        'RUN python3 -m pip install -r requirements.txt'

        '# Installed dependencies (shall be in /)'
        'COPY installedDependencies.yml installedDependencies.yml'
        ''
        '${genTestingMode(config, "Python")}'
        ''
        'WORKDIR /app'
        ''
        'COPY wrapper_script_platform.sh wrapper_script_platform.sh'
        ''	
        '# Broker'
        'COPY broker/brokerJars/ brokerJars'
        'COPY broker/src/ src'
        'COPY broker/broker.sh broker.sh'
        ''
        '# Platform'
        'COPY plJars/ plJars'
        'COPY common/ common'
        'COPY platform.sh platform.sh'
        ''
        if (hasUI(config)) {
            '# mgtUi'
            'COPY mgtUi/ mgtUi'
            'COPY common/ common'
            'COPY mgtUi.sh mgtUi.sh'
            ''
        }
        if (hasMonitoring(config)) {
            '# monitoring'
            'COPY monJars/ monJars'
            'COPY common/ common'
            'COPY monitoring.sh monitoring.sh'
            ''
        }
        ''
        'RUN chmod 777 wrapper_script_platform.sh'
        'CMD ./wrapper_script_platform.sh >> /var/log/iip.logs'
    }
}
