import Basics;
import JavaBasics;
import DockerBasics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template Dockerfile(IIPEcosphere config, FileArtifact target, sequenceOf(MeshElement) elements, Application app, ContainerType containerType, EcsDevice device) {
	
    def main(IIPEcosphere config, FileArtifact target, sequenceOf(MeshElement) elements, Application app, ContainerType containerType, EcsDevice device) {

        'FROM openjdk:13-alpine'  // TODO Java-Version & CPU
        '${containerSettings(config, containerType, device)}'
        'RUN apk add bash'
        setOf(Dependency) allDependencies = collectDependencies(elements);

        for (SystemDependency d: allDependencies) {
            if (d.key == 'JAVA8') {
                'RUN apk add openjdk8'
            }
        }
        ''
        '# Installed dependencies (shall be in /)'
        'COPY installedDependencies.yml installedDependencies.yml'
        ''
        '${genServersExpose(app)|e}'
        'WORKDIR /app'
        ''
        'COPY wrapper_script.sh wrapper_script.sh'
        ''
        '# App'
        'COPY ${getAppMvnName(app)}/target/${getAppMvnName(app)}-${getAppMvnVersion(app)}-bin.jar ${getAppMvnName(app)}-${getAppMvnVersion(app)}-bin.jar'
        ''   	
        '# Broker'
        'COPY broker/brokerJars/ brokerJars'
        'COPY broker/src/ src'
        'COPY broker/broker.sh broker.sh'
        ''
        if (containerType == ContainerType::EcsSvc_App) {
            '# ECS and Service Manager'
            'COPY ecsSvcJars/ ecsSvcJars'
            'COPY common/ common'
            'COPY ecsServiceMgr.sh ecsServiceMgr.sh'
            
        } else if (containerType == ContainerType::Ecs_Svc_App) {
    	    '# Service Manager'
            'COPY svcJars/ svcJars'
            'COPY common/ common'
            'COPY serviceMgr.sh serviceMgr.sh'
            ''
            '# ECS'
            'COPY ecsJars/ ecsJars'
            'COPY ecs.sh ecs.sh'
        
        } else if (containerType == ContainerType::C1Ecs_C2Svc_App) {
            '# Service Manager'
            'COPY svcJars/ svcJars'
            'COPY common/ common'
            'COPY serviceMgr.sh serviceMgr.sh'
        }    	
        ''
        'RUN chmod 777 wrapper_script.sh'
        'CMD ./wrapper_script.sh'
    }
}
