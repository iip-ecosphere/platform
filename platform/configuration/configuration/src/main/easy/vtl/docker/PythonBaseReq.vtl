import Basics;

@advice(IIPEcosphere)
@indent(indentation = 4, additional = 0)
template PythonBaseReq(IIPEcosphere config, FileArtifact target, sequenceOf(MeshElement) elements, setOf(Dependency) dependencies, Boolean justCommenDep) {
	
    def main(IIPEcosphere config, FileArtifact target, sequenceOf(MeshElement) elements, setOf(Dependency) dependencies, Boolean justCommenDep) {
        sequenceOf(PythonService) services = elements -> collect(e|e.impl) -> selectByKind(PythonService);

        // preliminary fix, just very basic ones, shall also include the remaining -> check versions here
        'pyyaml
        pyflakes
        websockets'

        setOf(Dependency) existDeps = {};
        for (PythonService pyService : services) {              
            //setOf(Dependency) deps = pyService.dependencies;
            setOf(Dependency) deps = pyService.dependencies -> selectByType(PythonDependency);
            
            for (PythonDependency d : deps) {
               Integer exists = 0;
               for (PythonDependency existD : existDeps) {
                   if ((existD.name == d.name) and (existD.version == d.version)) {
                       exists = 1;
                   }
               }

               if (justCommenDep) {
                   for (PythonDependency dependency : dependencies) {
                       if ((dependency.name == d.name) and ((dependency.version == null) or (dependency.version.length() == 0))) {
                           exists = 1;
                       }

                       if ((dependency.name == d.name) and (dependency.version == d.version)) {
                           exists = 1;
                       }
                   }
               }

               if (exists == 0) {
                   '${d.name} == ${d.version}'
                   existDeps.add(d);
               }
            }
            if (deps.size() == 0) {
                   ' '
            }
        }
    }	
}
