DataTypes::DataType::name = The name of the data type.
DataTypes::DataType::isNameOk = Is the name of the data type ok (overridable).
DataTypes::EnumLiteral::name = The name of an enumeration literal. Used to derive a corresponding programming language identifier.
DataTypes::EnumLiteral::ordinal = The unique numeric identifier of an enumeration literal within its enum.
DataTypes::EnumLiteral::description = Optional description of an enumeration literal. [optional]
DataTypes::EnumType = Represents enumeration data type in data to be processed, usually translated from/to its ordinal values.
DataTypes::EnumType::literals = The declared literals of an enumeration.
DataTypes::EnumType::enumLiteralNamesUnique = All declared names within an enumeration type must be unique.
DataTypes::EnumType::enumLiteralOrdinalsUnique = All declared ordinals within an enumeration type must be unique.
DataTypes::RecordType = Specifies a composite data type to be passed along a service chain.
DataTypes::RecordType::fields = Declared fields of the containing record type.
DataTypes::Field = Declared typed field within a record.
DataTypes::Field::name = Name of the field.
DataTypes::Field::type = The type of the field given in terms of another data type.
DataTypes::Field::description = The description of the field. [optional]
DataTypes::Field::optional = Shall this field be considered as mandatory or optional. Optional fields that do not receive a value, e.g., from a connector, shall not cause an error. [default is not optional, i.e., mandatory]
DataTypes::Field::readOnly = Shall this field be read-only, i.e., shall write access be prevented?
DataTypes::Field::nullable = May the value of this field have the value null or must there always be a value (default)?
DataTypes::Field::cachingTime = Time indicator until when a value in a connector may be cached instead of requested. 0 means no caching at all, negative values indicate endless caching, positive values the maximum caching/lifetime of this data field. Connectors and services may ignore this information (default -1).
DataTypes::Field::isNameOk = Is the name of the field type ok (overridable).
DataTypes::ArrayType::type = Datatype of the elements in the array.
DataTypes::AuthenticationSettings::authenticationKey = Logical name to access the authentication information in the identity store.
DataTypes::BooleanType = Represents the type boolean in data to be processed.
DataTypes::ByteArrayType = Represents a byte array type in data to be processed.
DataTypes::ByteStringType = Represents the byte string type in data to be processed. 
DataTypes::ByteType = Represents the type byte in data to be processed.
DataTypes::CACHE_ALWAYS = Constant value indicating that the actual field (cachingTime) shall always be retrieved from an internal cache.
DataTypes::CACHE_NONE = Constant value indicating that the actual field (cachingTime) shall never be cached, i.e., always retrieved from the related connector or service.
DataTypes::DateTimeType = Represents a generic data time type in data to be processed.
DataTypes::DoubleArrayType = Represents a double array type in data to be processed.
DataTypes::DoubleType = Represents the type double in data to be processed. 
DataTypes::FloatType = Represents the type float in data to be processed.
DataTypes::IEC61131_3DateTimeType = Represents the IEC 61131-3 date time type in data to be processed.
DataTypes::IdentityStore::artifact = The Maven artifact coordinates containing the implementation of the declared identity store (see "class").
DataTypes::IdentityStore::class = The class name of the identity store to be used.
DataTypes::Integer16Type = Represents a 16 bit Integer type in (OPC UA) data to be processed.
DataTypes::Integer32Type = Represents a 32 bit Integer type in (OPC UA) data to be processed.
DataTypes::Integer64Type = Represents a 64 bit Integer type in (OPC UA) data to be processed.
DataTypes::IntegerArrayType = Represents an Integer array type in data to be processed.
DataTypes::StringArrayType = Represents a String array type in data to be processed.
DataTypes::IntegerType = Represents the type Integer in data to be processed. 
DataTypes::ListType::type = Represents the generic type list in data to be processed. 
DataTypes::LongType = Represents the type long in data to be processed. 
DataTypes::ObjectType = Represents the generic type object (any) in data to be processed.
DataTypes::RecordType::fieldNamesUnique = Each declared field must have an unique name.
DataTypes::SByteType = Represents a short byte type in (OPC UA) data to be processed.
DataTypes::SecuritySettings::hostNameVerification = Requires or disables TLS hostname verification (default false).
DataTypes::SecuritySettings::keyAlias = The alias denoting the key to be used from the keystore defined by "keystoreKey".
DataTypes::SecuritySettings::keystoreKey = Logical name pointing to the keystore information in the identity store.
DataTypes::ShortType = Represents a short numeral type in data to be processed.
DataTypes::StringBase64Type = Represents a base64 encoded string type in data to be processed.
DataTypes::StringType = Represents a (unicode) string type in data to be processed.
DataTypes::UnsignedInteger16Type = Represents an unsigned 16 bit integer in (OPC UA) data to be processed.
DataTypes::UnsignedInteger32Type = Represents an unsigned 32 bit integer in (OPC UA) data to be processed.
DataTypes::UnsignedInteger64Type = Represents an unsigned 64 bit integer in (OPC UA) data to be processed.
DataTypes::YamlFileIdentityStore::class = The class name of the Yaml-based identity store.
DataTypes::dataTypeNamesUnique = Each declared data type must have an unique name.
DataTypes::identityStore = The identity store alternative to be used.
DataTypes::iipVer = Constant Maven version number of the platform.
DataTypes::mvnIipGroup = Maven group of IIP-Ecosphere platform components.
DataTypes::VersionedElement::snapshot = Shall the Maven artifact be a snapshot or a release. 
DataTypes::VersionedElement::ver = Version of the element (numbers separated by a dot).
DataTypes::Eclass_Unit_MByte = Semantic id for unit Mega Byte. 
DataTypes::Eclass_Unit_ms = Semantic id for unit millisecond.
DataTypes::Eclass_Property_swVersion = Semantic id for software version
DataTypes::Eclass_Property_swName = Semantic id for software name 
DataTypes::UiInvisibleGroup = UI hint for invisible settings 
DataTypes::UiMandatoryGroup1 = UI hint for mandatory settings in primary group. 
DataTypes::UiMandatoryGroup1First = UI hint for mandatory settings in primary group, add element to front. 
DataTypes::UiMandatoryGroup2 = UI hint for mandatory settings in secondary group.
DataTypes::UiOptionalGroup1 = UI hint for optional settings in primary group.
DataTypes::UiOptionalGroup2 = UI hint for optional settings in secondary group.
DataTypes::AliasType::represents = The underlying type this alias represents.
DataTypes::BaSyx10Plugin = Default plugin for retrofitted BaSyx 1.0
DataTypes::Plugin::artifact = Maven artifact of the plugin.
DataTypes::Plugin::description = Optional short description of the plugin.
DataTypes::Plugin::id = Unique plugin id as defined in the PluginDescriptor.
DataTypes::Plugin::kind = Descriptive plugin kind.
DataTypes::BooleanListType = Pre-defined List of Boolean. 
DataTypes::DoubleListType = Pre-defined List of Double. 
DataTypes::FloatListType = Pre-defined List of Float.
DataTypes::IntegerListType = Pre-defined List of Integer.
DataTypes::StringListType = Pre-defined List of String.