project Devices {

    import MetaConcepts;
    
    annotate BindingTime bindingTime = BindingTime::compile to .;
        
    abstract compound ContainerManager {
       Integer memLimit = 0; // e.g., JVM memory limit in MBytes     
         // - globally allocated hosts/ports
         // - global AAS location/URN/URI
    };
    
    compound DockerContainerManager refines ContainerManager {
        NonEmptyString dockerHost;
        NonEmptyString dockerImageYamlFilename = "image-info.yml";
        Boolean deleteWhenUndeployed = false;
    };
    
    ContainerManager containerManager = DockerContainerManager {
        dockerHost = "unix:///var/run/docker.sock"
    };
    isDefined(containerManager);
    
    enum CpuArchitecture {x86, ARM};
    enum CpuBits {bit32, bit64};
    
    compound EcsDevice refines CComputer {
        String id;
        CpuArchitecture cpu;
        CpuBits bits;
    }

}
