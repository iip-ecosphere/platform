Applications::Application::artifact = Optional Maven artifact coordinates for the application, e.g., specific resources. 
Applications::Application::cmdArg = Command line arguments to be passed into the application when starting it, separated by whitespace.
Applications::Application::createContainer = Create container for application (default false, experimental).
Applications::Application::debug = Enable additional debug output when starting the application.
Applications::Application::description = Description of the application.
Applications::Application::id = Unique id to administer/manager the application.
Applications::Application::name = Human readable name of the application.
Applications::Application::nameplateInfo = Nameplate information on the manufacturer of the application.
Applications::Application::servers = Servers assigned to this application, dependent on configuration to be started/stopped with the application.
Applications::Application::services = Service mesh(es) making up the application.
Applications::Application::packaging = Packaging schemas to apply, SpringFat by default;
Applications::Application::idOk = Application id must not contain @
Applications::Application::packagingOk = At least one packaging schema must be defined.
Applications::MeshConnector::next = The next service this connector is connecting to.
Applications::MeshElement::ensemble = Optional leader service this service forms a process group with, e.g., to be started in the same JVM.
Applications::MeshElement::ensembleOk = Service ensembles must be simple "trees of height 1", i.e., not form cycles or chains. 
Applications::MeshElement::impl = Implementing service.
Applications::MeshElement::implKind = Mesh element kind does not comply with service kind propagated.
Applications::MeshElement::implName = Mesh element name does not comply with service name  (propagated, convenience).
Applications::MeshElement::kind = Kind of the mesh element (propagated).
Applications::MeshElement::name = Name of the mesh element (propagated, convenience).
Applications::MeshElement::pos_x = Horizontal position of mesh element in graphical editor (may change at runtime).
Applications::MeshElement::pos_y = Vertical position of mesh element in graphical editor (may change at runtime).
Applications::MeshInnerElement::next = Downstream services linked through connectors.
Applications::MeshProcessor::inOutCheck = All downstream services must comply with their input types to the output of this service. 
Applications::MeshProcessor::input = Input types (propagated).
Applications::MeshProcessor::output = Output types (propagated). 
Applications::MeshProcessor::procIn = Input of implementing service must match input of mesh element (propagated). 
Applications::MeshProcessor::procKind = Mesh element kind must be TRANSFORMATION_SERVICE or PROBE_SERVICE.
Applications::MeshProcessor::procOut = Output of implementing service must match output of mesh element (propagated). 
Applications::MeshSink::input = Input types (propagated).
Applications::MeshSink::sinkIn = Input of implementing service must match input of mesh sink (propagated).
Applications::MeshSink::sinkKind = Sink element kind must be SINK_SERVICE.
Applications::MeshSource::inOutCheck = All downstream services must comply with their input types to the output of this service.
Applications::MeshSource::next = Next mesh elements connected through connectors.
Applications::MeshSource::output = Output types (propagated).
Applications::MeshSource::pollInterval = Optional polling interval for synchronous services, may be 0 for no polling.
Applications::MeshSource::sourceKind = Source element kind must be SOURCE_SERVICE.
Applications::MeshSource::sourceOut = Output of implementing service must match output of mesh source (propagated).
Applications::ServiceMesh::description = Description of the service mesh.
Applications::ServiceMesh::sources = Sources of the service mesh.
Applications::ServiceMesh::meshElementsUnique = Name of mesh elements must be unique.
Applications::TraceToAasService::application = Reference to application represented by this service. 
Applications::TraceToAasService::artifact = Optional Maven artifact coordinates containing the implementation of the service.
Applications::TraceToAasService::kind = The kind of the service.
Applications::TraceToAasService::nameplateInfo = Nameplate information on the manufacturer of the service. 
Applications::TraceToAasService::parameter = Service parameters set at service startup, may change at runtime.
Applications::TraceToAasService::ver = Version of service (numbers separated by a dot).
Applications::TraceToAasService::outTransport = Optional transport configuration to send received data/traces to.
Applications::TraceToAasService::parameterOk = At least the default parameters must be defined.
Applications::TraceToAasOutTransport::host = Optional network host name to send received data/traces to.
Applications::TraceToAasOutTransport::port = Optional network port to send received data/traces to.
Applications::TraceToAasOutTransport::security = Optional security settings for the host/port to send received data/traces to.
Applications::TraceToAasJavaService::outTransport = Optional transport configuration to send received data/traces to.
Applications::dfltTraceToAasServiceParameter = Default TraceToAasJavaService parameter.
Applications::appNamesUnique = Name of all applications must be unique.
Applications::appIdUnique = Id of all applications must be unique. 
Applications::DeploymentPlan::name = Display name of deployment plan.
Applications::DeploymentPlan::application = Application to be deployed.
Applications::DeploymentPlan::id = Unique id of the deployment plan.
Applications::DeploymentPlan::ver = Version of the deployment plan.
Applications::DeploymentPlan::description = Description of the (purpose of the) deployment plan.
Applications::DeploymentPlan::parallelize = Is parallel execution of the deployment plan permitted.
Applications::DeploymentPlan::allowMultiExecution = Enables or prevents execution of multiple application instances specified in this deployment plan.  
Applications::DeploymentPlan::onUndeployRemoveArtifact = Shall artifacts be removed on undeployment or shall they be left over.
Applications::DeploymentPlan::disabled = Is the plan enabled or disabled.
Applications::DeploymentPlan::cmdArgs = Optional comma separated command line arguments for the services.
Applications::DeploymentPlan::assignments = Service-to-resource assignments.
Applications::DeploymentPlan::cmdArg = Optional command line arguments to be passed to the services to be started with this plan.
Applications::DeploymentPlan::servers = Indicates where servers shall be started, on the device given as ip/hostname/(AAS)deviceId.
Applications::DeploymentPlan::ensembles = Optional re-assignment of ensemble members to ensemble leaders.
Applications::DeploymentPlan::parameter = Optional assignment of parameter values to services.
Applications::DeploymentPlan::hasAssignments = A deployment plan must have zero or more assignments.
Applications::DeploymentPlan::meshCovered = The assignments of a deployment plan must cover all services in the services meshes of the addressed application.
Applications::DeploymentPlan::noLoopEnsembles = The ensembles in a deployment plan must have no loops.
Applications::DeploymentPlan::parameterServicesUnique = Each service must me stated at maximum once in the parameter assignments of a deployment plan.
Applications::DeploymentPlan::parameterNamesUnique = Each parameter must be stated at maximum once per service in the parameter assignments of a deployment plan.
Applications::deployPlanIdUnique = Ids of all deployment plans must be unique.
Applications::EnsembleSpec::leader = Ensemble leader defining the OS process the members will be started within.
Applications::EnsembleSpec::member = Member to be started with the leader in the same OS process.
Applications::NamedServiceAssignment::resource = Name of the resource the services shall be assigned to.
Applications::ServiceAssignment::services = Services to be assigned to the specified resource.
Applications::ServerAssignment::server = Server a host shall be assigned to overriding at deployment time the host specification for that server in the configuration.
Applications::ServerAssignment::serverAssignmentServerDefined = The server must be given.
Applications::NamedServerAssignment::hostId = Host name, IP address or (AAS) device id identifying the host.
Applications::ParameterServiceAssignment::service = The service to assign the parameter to.
Applications::ParameterServiceAssignment::parameter = The parameter assignments.
Applications::ParameterAssignment::parameter = The parameter to assign a value to.
Applications::StringParameterAssignment::parameter = The string parameter to assign a value to.
Applications::StringParameterAssignment::value = The string value to assign.
Applications::IntegerParameterAssignment::parameter = The integer parameter to assign a value to.
Applications::IntegerParameterAssignment::value = The integer value to assign.
Applications::RealParameterAssignment::parameter = The real parameter to assign a value to.
Applications::RealParameterAssignment::value = The real value to assign.
Applications::LongParameterAssignment::parameter = The long parameter to assign a value to.
Applications::LongParameterAssignment::value = The long value to assign.
Applications::BooleanParameterAssignment::parameter = The Boolean parameter to assign a value to.
Applications::BooleanParameterAssignment::value = The Boolean value to assign.
