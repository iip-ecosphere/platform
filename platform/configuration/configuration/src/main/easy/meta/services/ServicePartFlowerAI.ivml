project ServicePartFlowerAI {

   import Services;
   import ServerPartFlowerAI;
   
   annotate BindingTime bindingTime = BindingTime::compile to .;
   
   enum FlowerAiFramework {
       TENSORFLOW
   };

   enum FlowerAiClient {
       NUMPY
   };
   
   compound FlowerFederatedAiService refines PythonService {
       ServiceKind kind = ServiceKind::TRANSFORMATION_SERVICE;
       IipVersion ver = "1.3.0";
       FlowerAiFramework framework;
       FlowerAiClient client;
       refTo(FlowerFederatedAiServer) server;
       setOf(refTo(Dependency)) dependencies = reqFlowerDependencies;
       NameplateInfo nameplateInfo = {
           manufacturerProductDesignation = "Generic Flower FL AI service@en",
           manufacturer = refBy(manufacturer_sse)
       };
       asynchronous == true; // always
       Constraint reqDependenciesOk = dependencies.includesAll(reqFlowerDependencies);
   }
   
}