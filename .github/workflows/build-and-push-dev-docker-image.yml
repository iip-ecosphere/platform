name: Publish docker developer image

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Extract version
        run: echo VERSION=${GITHUB_REF#refs/*/} >> $GITHUB_ENV
      - name: Check output
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo $VERSION
          echo ${{ env.VERSION }}
          ls
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.14.0
        with: 
          maven-version: 3.9.7
      - name: Setup maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: '[{"id": "central", "name":"Maven Central", "url": "https://repo1.maven.org/maven2", "releases": {"enabled": "true"}, "snapshots": {"enabled": "false"}}, {"id": "SSE", "name":"SSE", "url": "https://projects.sse.uni-hildesheim.de/qm/maven/", "releases": {"enabled": "true"}, "snapshots": {"enabled": "true"}}, {"id": "bintray", "name":"bintray", "url": "https://jcenter.bintray.com", "releases": {"enabled": "true"}, "snapshots": {"enabled": "false"}}]'
      - name: Install the platform basics
        run: |
          cd ./platform/tools/Install
          mvn --batch-mode --update-snapshots package -DskipTests
      - name: Build the test app through tests
        run: |
          cd ./platform/configuration/configuration
          mvn --batch-mode --update-snapshots package -Dtest="IvmlSimpleMeshTests"
          cd ../../..
      - name: Instantiate the platform, prepare container building
        run: |
          cd ./platform/tools/Install
          sed -i 's/String platformServer = "147.172.178.145";/String platformServer = "172.19.0.22";\nartifactsFolder="\/root\/\/platform\/artifacts";/g' src/main/easy/TechnicalSetup.ivml
          sed -i 's/containerGeneration = true;/containerGeneration = false;/g' src/main/easy/TechnicalSetup.ivml
          sed -i 's/platformContainerGeneration = true;/platformContainerGeneration = false;/g' src/main/easy/TechnicalSetup.ivml
          echo "Using configuration:"
          cat src/main/easy/TechnicalSetup.ivml
          mvn install
          cp -r container/DevContainer/* gen
          rm -r gen/eclipse
          cp gen/SimpleMeshInstallTestingApp/target/SimpleMeshInstallTestingApp-0.1.0-SNAPSHOT-bin.jar gen/SimpleMeshTestingApp-0.1.0-SNAPSHOT-bin.jar
          echo "Base directory for container creation:"
          ls gen
      - name: Get pre-packaged EASy-Producer
        uses: wei/wget@v1
        with:
          args: -O easy.tgz https://projects.sse.uni-hildesheim.de/eclipse/easy-nightly/net.ssehub.easy.producer.EasyProducer-linux.gtk.x86_64.tar.gz
      - name: Extract EASy-Producer
        uses: a7ul/tar-action@v1.1.0
        id: extract
        with:
          command: x
          cwd: ./gen/eclipse
          files: easy.tgz
      - name: Unzip PyDev
        uses : montudor/action-zip@v1
        with:
          args: unzip -qq PyDev12.1.0.zip -d ./gen/eclipse
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PW }}        
      - name: Build and push platform
        uses: docker/build-push-action@v2
        with:
          build-args: VERSION=${{ env.VERSION }}
          push: true
          tags: iipecosphere/dev-container:latest
          context: ./platform/tools/Install/gen/
          file: ./platform/tools/Install/container/DevContainer/Dockerfile
